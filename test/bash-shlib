# -*- mode: shell-script -*-

prefix_cmd='cd "$test_tmpdir/test1";'
export _shlib_loaded=
export _shlib_included=
export SHLIB_PATH=$test_tmpdir/test1

##
## bash-shlib usable as a shebang
##

teardown() { cd "$test_tmpdir"; rm -rf test1; }

setup() {
    cd "$test_tmpdir"; mkdir test1;
    cd test1
    cat <<EOF > libxxx.sh
echo foo
EOF
    cat <<EOF > foo
#!$base/src/bin/bash-shlib

echo a
include xxx
echo args: "\$@"
EOF
    chmod +x foo
}


try "./foo a b"
noerror
is out "a
foo
args: a b
"



try "./foo -d"
noerror
is out "a
foo
args: -d
"


##
## bash-shlib doesn't break stty
##


setup() {
    cd "$test_tmpdir"; mkdir test1;
    cd test1
    cat <<EOF > foo
#!$base/src/bin/bash-shlib

stty size
EOF
    chmod +x foo
}


try "./foo"
noerror


##
## $0 is preserved
##


setup() {
    cd "$test_tmpdir"; mkdir test1;
    cd test1
    cat <<EOF > foo
#!$base/src/bin/bash-shlib

i=0
for a in "\$0" "\$@"; do
    echo "\\\$\$((i++)):"
    echo "\$a" | sed -r 's/^/  | /g'
done
EOF
    chmod +x foo
}


noerror
try "./foo a 'b c' d" 'check $0'
noerror
is out "\
\$0:
  | ./foo
\$1:
  | a
\$2:
  | b c
\$3:
  | d
"


##
## ps of myself doesn't show bash-shlib
##


setup() {
    cd "$test_tmpdir"; mkdir test1;
    cd test1
    cat <<EOF > foo
#!$base/src/bin/bash-shlib

ps -o command= --pid=\$\$
EOF
    chmod +x foo
}


noerror
try "./foo a 'b c' d" 'process name in process list'
noerror
## Optimal would be:
#is out "./foo a b c d" RTRIM
is out reg "^\./foo a b c d  ##"
